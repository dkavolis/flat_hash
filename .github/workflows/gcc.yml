name: gcc

on:
  push:
    branches: [master]
    paths:
      - ".github/build/**"
      - ".github/workflows/gcc.yml"
      - ".github/ci-presets.json"
      - "cmake/**"
      - "include/**"
      - "tests/**"
      - "CMakeLists.txt"
      - "vcpkg.json"
      - "CMakePresets.json"
  pull_request:
    branches: [master]
    paths:
      - ".github/build/**"
      - ".github/workflows/gcc.yml"
      - ".github/ci-presets.json"
      - "cmake/**"
      - "include/**"
      - "tests/**"
      - "CMakeLists.txt"
      - "vcpkg.json"
      - "CMakePresets.json"

env:
  BUILD_TYPE: Release
  INSTALL_LOCATION: ".local"

jobs:
  build:
    runs-on: ubuntu-20.04
    name: ${{ github.workflow }}-${{ matrix.preset }}
    if: "!contains(github.event.head_commit.message, '[skip ci]') &&
      !contains(github.event.head_commit.message, '[ci skip]')  &&
      !contains(github.event.head_commit.message, '[skip gcc]')  &&
      !contains(github.event.head_commit.message, '[gcc skip]')"
    strategy:
      fail-fast: false
      matrix:
        include:
          # need <format> support
          # - cxx: g++-11
          #   install: sudo apt install g++-11
          #   preset: ci-linux
          - cxx: g++-11
            install: sudo apt install g++-11
            configure: ci-linux
            preset: ci-linux-fmt
          - cxx: g++-11
            install: |
              sudo apt install g++-11
              pip install git+https://github.com/gcovr/gcovr.git@ba4de0ea3b4c69aec2b745b7174411d6867828e8 --user
            configure: ci-codecov
            preset: ci-codecov

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Find the number of threads (Linux)
        run: echo "::set-output name=THREADS::`nproc`"
        id: number-of-threads
        shell: bash

      - uses: ./.github/build
        with:
          configurePreset: ${{ matrix.configure }}
          buildPreset: ${{ matrix.preset }}
          testPreset: ${{ matrix.preset }}
          cxx: ${{ matrix.cxx }}
          install: ${{ matrix.install }}
          cxxflags: ${{ matrix.cxxflags }}
          threads: ${{ steps.number-of-threads.outputs.THREADS }}

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        if: "${{ matrix.preset == 'ci-codecov' }}"
        with:
          token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
          directory: ${{ github.workspace }}/out/build/${{ matrix.preset }}/tests
          dry_run: false
          fail_ci_if_error: false
          files: flat_hash_coverage_xml.xml
          flags: unittests
          name: flat-hash-codecov
          verbose: true
